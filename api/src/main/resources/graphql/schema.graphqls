type Query {
    personById(id: ID!): Person
    familyById(id: ID!): Family
    noteById(id: ID!): Note
    persons(page: Int, pageSize: Int): PersonList
}

type PersonList {
    persons: [Person!]!
    hasMore: Boolean
}

type Person {
    grampsId: ID!
    handle: String!
    displayName: String!
    name: Name
    gender: Gender
    names: [Name]
    families: [Family!]
    parentFamilies: [Family!]
    notes: [Note!]
    mediumRefs: [MediumRef!]
    attributes: [Attribute!]
    events: [EventRef!]
    birthEvent: EventRef
    deathEvent: EventRef
}

type Attribute {
    type: AttributeType
    customType: String
    value: String
}

enum AttributeType {
    CUSTOM
    CASTE
    DESCRIPTION
    ID
    NATIONAL
    NUM_CHILD
    SSN
    NICKNAME
    CAUSE
    AGENCY
    AGE
    FATHER_AGE
    MOTHER_AGE
    WITNESS
    TIME
    OCCUPATION
}

type Medium {
    handle: String!
    grampsId: String!
    mime: String
    description: String
    contentUrl: String!
    tags: [String!]
}

type MediumRef {
    handle: String!
    # notes: [Note!]
    rectangle: Rectangle
    medium: Medium!
}

type Rectangle {
    x1: Int!
    y1: Int!
    x2: Int!
    y2: Int!
}

type Name {
    displayName: String!
    givenName: String
    surnames: [Surname!]!
    suffix: String
}

type Surname {
    surname: String
    prefix: String
    primary: Boolean
}

enum Gender {
    FEMALE
    MALE
    UNKNOWN
}

type Family {
    grampsId: ID!
    handle: String!
    father: Person
    mother: Person
    children: [Child!]
    mediumRefs: [MediumRef!]
}

type Child {
    handle: String!
    motherRelationType: ChildRelationType
    fatherRelationType: ChildRelationType
    person: Person
    privacy: Boolean
}

enum ChildRelationType {
    NONE
    BIRTH
    ADOPTED
    STEPCHILD
    SPONSORED
    FOSTER
    UNKNOWN
    CUSTOM
}

type Note {
    grampsId: ID!
    handle: String!
    format: NoteFormat!
    type: NoteType!
    text: StyledText!
    change: Int!
    privacy: Boolean!
}

enum NoteFormat {
    FLOWED, 
    FORMATTED
}

type NoteType {
    type: NoteTypeEnum!
    value: String
}

enum NoteTypeEnum {
    UNKNOWN
    CUSTOM
    GENERAL
    RESEARCH
    TRANSCRIPT
    PERSON
    ATTRIBUTE
    ADDRESS
    ASSOCIATION
    LDS
    FAMILY
    EVENT
    EVENTREF
    SOURCE
    SOURCEREF
    PLACE
    REPO
    REPOREF
    MEDIA
    MEDIAREF
    CHILDREF
    PERSONNAME
    SOURCE_TEXT
    CITATION
    REPORT_TEXT
    HTML_CODE
    TODO
    LINK
    ANALYSIS
}

type StyledText {
    text: String!
    tags: [StyledTextTag!]!
}

type StyledTextTag {
    name: String!
    value: String
    ranges: [StyledTextRange]
}

type StyledTextRange {
    start: Int!
    end: Int!
}

type EventRef {
    handle: String!
    event: Event!
    # notes: [Note!]
    # citations: [Citation!]
}

type Event {
    handle: String!
    grampsId: String!
    type: EventType!
    date: Date
    description: String
    attributes: [Attribute!]
}

type EventType {
    type: EventTypeEnum!
    value: String
}

enum EventTypeEnum {
    CUSTOM
    MARRIAGE
    MARR_SETTL
    MARR_LIC
    MARR_CONTR
    MARR_BANNS
    ENGAGEMENT
    DIVORCE
    DIV_FILING
    ANNULMENT
    MARR_ALT
    ADOPT
    BIRTH
    DEATH
    ADULT_CHRISTEN
    BAPTISM
    BAR_MITZVAH
    BAS_MITZVAH
    BLESS
    BURIAL
    CAUSE_DEATH
    CENSUS
    CHRISTEN
    CONFIRMATION
    CREMATION
    DEGREE
    EDUCATION
    ELECTED
    EMIGRATION
    FIRST_COMMUN
    IMMIGRATION
    GRADUATION
    MED_INFO
    MILITARY_SERV
    NATURALIZATION
    NOB_TITLE
    NUM_MARRIAGES
    OCCUPATION
    ORDINATION
    PROBATE
    PROPERTY
    RELIGION
    RESIDENCE
    RETIREMENT
    WILL
    STILLBIRTH
}

type Date {
    # TODO calendartype, newyeartime, datemodifier
    startDate: DateDay!
    endDate: DateDay
    text: String
}

type DateDay {
    day: Int
    month: Int
    year: Int
}